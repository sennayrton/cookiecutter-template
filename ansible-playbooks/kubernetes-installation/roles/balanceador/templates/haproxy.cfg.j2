global
  log /dev/log local0
  log /dev/log local1 notice
  daemon
  user haproxy
  group {{ user_group }}

defaults
  log global
  mode  http
  option  httplog
  option  dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

listen stats
  bind *:9000
  mode http
  stats enable
  stats hide-version
  stats uri /stats
  stats realm Strictly\ Private
  stats auth admin:{{ password_stats }}
  stats refresh 30s


frontend k8s-api
  bind {{ hostvars[groups['bal_vip'][0]].ansible_host }}:6443
  mode tcp
  option tcplog
  default_backend k8s-api

backend k8s-api
  mode tcp
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
{% for host in groups['masters'] %}
  server k8s-api-{{loop.index}} {{ host }}.{{ domain }}:6443 check
{% endfor %}

frontend k8s-ingress-http
  bind {{ hostvars[groups['bal_vip'][0]].ansible_host }}:80
  mode http
  option httplog
  default_backend k8s-ingress-http

backend k8s-ingress-http
  mode http
  balance roundrobin
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
{% for host in groups['workers'] %}
  server k8s-ingress-{{loop.index}} {{ host }}.{{ domain }}:30092 check
{% endfor %}


frontend k8s-ingress-https
  bind {{ hostvars[groups['bal_vip'][0]].ansible_host }}:443
  mode tcp
  option tcplog
  default_backend k8s-ingress-https

backend k8s-ingress-https
  mode tcp
  balance roundrobin
  option ssl-hello-chk
{% for host in groups['workers'] %}
  server k8s-ingress-{{loop.index}} {{ host }}.{{ domain }}:30093 check
{% endfor %}

