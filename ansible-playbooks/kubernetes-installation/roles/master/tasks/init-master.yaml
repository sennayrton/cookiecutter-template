---
- name: master
  block:
    - name: Ensure /etc/kubernetes/pki/etcd/ directory exists
      file:
        path: /etc/kubernetes/pki/etcd/
        state: directory
      become: yes

    - name: Ensure /usr/local/{{ entorno }}/{{ user_home_dir }}/kubelet directory exists
      file:
        path: /usr/local/{{ entorno }}/{{ user_home_dir }}/kubelet
        state: directory
      become: yes

    - name: Template kubeadm config
      template:
        src: templates/kubeadm-config.j2
        dest: /etc/kubernetes/kubeadm-config.yaml
      become: yes

    - name: Copy control plane certs to masters
      copy:
        src: /tmp/cert_control_plane/{{ item }}
        dest: /etc/kubernetes/pki/{{ item }}
      with_items:
        - etcd/ca.crt
        - apiserver-etcd-client.crt
        - apiserver-etcd-client.key  
      become: yes

    #- name: Delete control plane certs from local
    #  file:
    #    path: /tmp/cert_control_plane/{{ item }}
    #    state: absent
    #  with_items:
    #    - etcd/ca.crt
    #    - apiserver-etcd-client.crt
    #    - apiserver-etcd-client.key

    - name: Check if kubelet.conf exists
      stat:
        path: "/etc/kubernetes/kubelet.conf"
      register: kubelet_conf
    
    - name: kubeadm | Check if kubeadm has already run
      stat:
        path: "/var/lib/kubelet/config.yaml"
      register: kubeadm_already_run


    - name: Initialize Kubernetes control-plan in first master and uplaod certs
      shell: kubeadm init --config /etc/kubernetes/kubeadm-config.yaml --upload-certs
      register: kubeadm_output
      become: yes
      until: kubeadm_output is not failed
      retries: 5
      delay: 30
      when: inventory_hostname == groups['masters'][0] and not kubeadm_already_run.stat.exists

    - name: Set kubeadm certificate key and kubeadm_token
      set_fact:
        kubeadm_certificate_key: "{{ item | regex_search('--certificate-key ([^ ]+)\\n\\n','\\1') | first }}"
        kubeadm_token: "{{ item | regex_search('--token ([^ ]+)','\\1') | first }}"
        token_ca: "{{ item | regex_search('--discovery-token-ca-cert-hash ([^ ]+) ','\\1') | first }}"
      when: inventory_hostname == groups['masters'][0] and kubeadm_output.changed
      with_items: "{{ hostvars[groups['masters'][0]]['kubeadm_output'].stdout | default([]) }}"

    - debug:
        msg: 
          - "kubeadm_certificate_key->{{ hostvars[groups['masters'][0]]['kubeadm_certificate_key'] }}"
          - "kubeadm_token->{{ hostvars[groups['masters'][0]]['kubeadm_token'] }}"
          - "token_ca->{{ hostvars[groups['masters'][0]]['token_ca'] }}"
      when: kubeadm_output.changed

    - name: Ensure .kube directory exists
      file:
        path: $HOME/.kube
        state: directory
      when: inventory_hostname == groups['masters'][0]
      become: yes

    - name: Copy admin.conf to .kube
      copy:
        src: /etc/kubernetes/admin.conf 
        dest: /root/.kube/config
        remote_src: yes
      when: inventory_hostname == groups['masters'][0]
      become: yes

    - name: Fetch admin.conf to Ansible controller
      fetch:
        src: /etc/kubernetes/admin.conf 
        dest: /tmp/
      when: inventory_hostname == groups['masters'][0]
      become: yes

    - name: Install CNI plugin
      k8s:
        state: present
        definition: "{{ lookup('file', 'files/calico.yaml') }}"
        kubeconfig: /tmp/{{ groups['masters'][0] }}/etc/kubernetes/admin.conf
      delegate_to: localhost
      run_once: yes

    - name: Habilita los puertos 2379-2380 TCP
      firewalld:
        port: 2379-2380/tcp
        zone: public
        permanent: yes
        immediate: yes
        state: enabled

    - name: Habilita el puerto 179 TCP
      firewalld:
        port: 179/tcp
        zone: public
        permanent: yes
        immediate: yes
        state: enabled

    - name: Habilita el puerto 4789 UDP
      firewalld:
        port: 4789/udp
        zone: public
        permanent: yes
        immediate: yes
        state: enabled

    - name: Habilita el puerto 443 TCP
      firewalld:
        port: 443/tcp
        zone: public
        permanent: yes
        immediate: yes
        state: enabled

    - name: Habilita el puerto 5473 TCP
      firewalld:
        port: 5473/tcp
        zone: public
        permanent: yes
        immediate: yes
        state: enabled

    - name: Habilita el puerto 51820 UDP
      firewalld:
        port: 51820/udp
        zone: public
        permanent: yes
        immediate: yes
        state: enabled

    - name: Set masquarade for public zone
      firewalld:
        zone: public
        masquerade: yes
        immediate: yes
        permanent: yes
        state: enabled
        
    - name: Join the rest of masters
      shell: kubeadm join {{ groups['bal_vip'][0] }}:6443 --token {{ hostvars[groups['masters'][0]]['kubeadm_token'] }} --discovery-token-ca-cert-hash {{ hostvars[groups['masters'][0]]['token_ca'] }} --control-plane --certificate-key {{ hostvars[groups['masters'][0]]['kubeadm_certificate_key'] }}
      when: inventory_hostname != groups['masters'][0] and (not kubelet_conf.stat.exists)
      become: yes
    
