---

- name: Ensure chrony package is installed
  ansible.builtin.package:
    name: chrony
    state: present
    
- name: Enable and start chronyd service
  ansible.builtin.service:
    name: chronyd
    state: started
    enabled: yes
- name: Synchronize time manually
  ansible.builtin.shell:  chronyc sources

- name: Creamos el directorio /usr/local/{{ entorno }}/{{ user_home_dir }} si no existe
  file:
    path: "/usr/local/{{ entorno }}/{{ user_home_dir }}"
    owner: "{{ user_name }}"
    group: "{{ user_group }}"
    mode: u=rwx,g=rwx,o=r
    state: directory

- name: Customize .bashrc
  shell: |
    cat << EOF >> /usr/local/ei/xpkami01/.bashrc

- name: Make virtual environment
  shell: source /home/username/.bashrc && echo "source ~/.bashrc" > /usr/local/ei/xpkami01/.profile
  args:
    executable: /bin/bash

- name: Create Users & Groups
    group:
      name: "{{ user_group }}"
        state: present

- name: Create Users Task
    user:
      name: "{{ item }}"
        state: present
        password: "{{ default_user_password | password_hash('sha512','A512') }}"
        shell: /bin/bash
        group: "{{ user_group }}"
      with_items: "{{ user_name }}"
            
- name: Recursively change ownership of a directory
  file:
    path: "{{ user_home_dir }}"
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_group }}"

- name: Add group to sudoers
  shell: echo "gpkami01 ALL=(ALL) ALL" >> /etc/sudoers
  args:
    executable: /bin/bash
    
- name: Generate /etc/hosts file
  ansible.builtin.template:
    src: hosts.j2
    dest: /etc/hosts 
    
- name: Disable SWAP because k8s can't work with swap enabled (1/2)
  ansible.builtin.shell: swapoff -a

- name: Disable SWAP in fstab because k8s can't work with swap enabled (2/2)
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+.*)$'
    replace: '# \1'

- name: Load required modules
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - br_netfilter
    - overlay
    
- name: Create the .conf file to load the modules at bootup
  ansible.builtin.template:
    src: kernel_modules.conf.j2
    dest: /etc/modules-load.d/k8s_kernel_modules.conf

- name: Modify sysctl entries
  ansible.posix.sysctl:
    name: '{{ item.key }}'
    value: '{{ item.value }}'
    sysctl_set: yes
    state: present
    reload: yes
  ignore_errors: True
  with_items:
    - {key: net.bridge.bridge-nf-call-ip6tables, value: 1}
    - {key: net.bridge.bridge-nf-call-iptables,  value: 1}
    - {key: net.ipv4.ip_forward,  value: 1}
    
- name: Put SELinux in permissive mode
  selinux:
    policy: targeted
    state: "{{ selinux_state }}"
    
- name: Setup required sysctl params
  ansible.posix.sysctl:
    name: '{{ item.key }}'
    value: '{{ item.value }}'
    sysctl_set: yes
    state: present
    reload: yes
  with_items:
    - {key: net.bridge.bridge-nf-call-ip6tables, value: 1}
    - {key: net.bridge.bridge-nf-call-iptables,  value: 1}
    - {key: net.ipv4.ip_forward,  value: 1}
    
- name: Add kubernetes repository and proxy
  ansible.builtin.template:
    src: 'kubernetes.repo.j2'
    dest: /etc/yum.repos.d/kubernetes.repo
  
- name: Add RHEL proxy repository
    blockinfile: 
      state: present
      insertafter: EOF
      dest: /etc/yum.repos.d/almalinux.repo
      content: |
        proxy=http://10.200.140.230:80
    
- name: Update system packages
  package:
    name: "*"
    state: latest
  
- name: Disable firewalld service
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: no
    
- name: Para que se apliquen los cambios
  ansible.builtin.shell: sysctl --system
  
- name: Reinicio de la m√°quina
  ansible.builtin.shell: reboot
