---

- name: Aseguramos que chrony package esta instalado
  ansible.builtin.package:
    name: chrony
    state: present
    
- name: Habilitar e iniciar el servicio chronyd
  ansible.builtin.service:
    name: chronyd
    state: started
    enabled: yes
- name: Sincronizar la hora manualmente
  ansible.builtin.shell:  chronyc sources
  
- name: Ponemos SELinux en modo permisivo
  selinux:
    policy: targeted
    state: "{{ selinux_state }}"

- name: Creamos el directorio /usr/local/{{ entorno }}/{{ user_home_dir }} si no existe
  file:
    path: "/usr/local/{{ entorno }}/{{ user_home_dir }}"
    owner: root
    group: root
    mode: u=rwx,g=rwx,o=r
    state: directory
    
- name: Aseguramos que el grupo gpkami01 existe y sino lo creamos
  ansible.builtin.shell:  groupadd gpkami01
  ignore_errors: true
  
- name: Aseguramos que el usuario xpkami01 existe y sino lo creamos
  ansible.builtin.shell:  useradd xpkami01 -g gpkami01 -d /usrl/local/ei/xpkami01
  ignore_errors: true
  
- name: Customizamos el .bashrc
  blockinfile:
    dest: ~/.bashrc
    block: |-
      alias k='kubectl'
      alias ll='ls -la'
      if [ -f /etc/bashrc ]; then
        . /etc/bashrc
      fi  
      export PS1="游댬久엪[\e[31m\][\[\e[m\]\[\e[38;5;172m\]\u\[\e[m\]@\[\e[38;5;153m\]\h\[\e[m\] \[\e[38;5;214m\]\W\[\e[m\]\[\e[31m\]]\[\e[m\]\\$"
      export http_proxy=http://10.200.140.230:80
      export https_proxy=http://10.200.140.230:80
      export KUBECONFIG=/etc/rancher/rke2/rke2.yaml
      export PATH=${PATH}:/var/lib/rancher/rke2/bin

- name: Carga por defecto del .bashrc en el inicio de sesi칩n del usuario
  shell: source ~/.bashrc && echo "source ~/.bashrc" > .profile
  args:
    executable: /bin/bash
            
- name: Cambiar recursivamente la propiedad del directorio home
  file:
    path: "{{ user_home_dir }}"
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_group }}"

- name: Agregamos el grupo a sudoers
  shell: echo "gpkami01 ALL=(ALL) ALL" >> /etc/sudoers
  args:
    executable: /bin/bash
    
- name: Generamos el archivo /etc/hosts con una plantilla
  ansible.builtin.template:
    src: hosts.j2
    dest: /etc/hosts 

- name: Modificamos entradas de sysctl para kubernetes
  ansible.builtin.template:
    src: 99-kubernetes-cri.conf.j2
    dest: /etc/sysctl.d/

- name: Deshabilitamos la SWAP porque k8s no puede funcionar con swap habilitado (1/2)
  ansible.builtin.shell: swapoff -a

- name: Deshabilitamos la SWAP porque k8s no puede funcionar con swap habilitado (2/2)
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+.*)$'
    replace: '# \1'

- name: Cargamos los modulos necesarios
  community.general.modprobe:
    name: '{{ item }}'
    state: present
  with_items: '{{ modules }}'
    
- name: Creamos el archivo .conf para cargar los m칩dulos en el arranque
  ansible.builtin.template:
    src: kernel_modules.conf.j2
    dest: /etc/modules-load.d/k8s_kernel_modules.conf

- name: Modificamos entradas de sysctl
  ansible.posix.sysctl:
    name: '{{ item.key }}'
    value: '{{ item.value }}'
    sysctl_set: yes
    state: present
    reload: yes
  ignore_errors: True
  with_items:
    - {key: net.bridge.bridge-nf-call-ip6tables, value: 1}
    - {key: net.bridge.bridge-nf-call-iptables,  value: 1}
    - {key: net.ipv4.ip_forward,  value: 1}
    
- name: Configuramos los par치metros sysctl requeridos
  ansible.posix.sysctl:
    name: '{{ item.key }}'
    value: '{{ item.value }}'
    sysctl_set: yes
    state: present
    reload: yes
  with_items:
    - {key: net.bridge.bridge-nf-call-ip6tables, value: 1}
    - {key: net.bridge.bridge-nf-call-iptables,  value: 1}
    - {key: net.ipv4.ip_forward,  value: 1}
    
- name: Borramos almalinux repo para crear uno nuevo con plantilla
  ansible.builtin.shell: rm -f /etc/yum.repos.d/almalinux.repo
  
- name: A침adimos el repositorio de almalinux y el proxy
  ansible.builtin.template:
    src: 'almalinux.repo.j2'
    dest: /etc/yum.repos.d/almalinux.repo
    
- name: A침adimos el repositorio de kubernetes y el proxy
  ansible.builtin.template:
    src: 'kubernetes.repo.j2'
    dest: /etc/yum.repos.d/kubernetes.repo
   
- name: A침adimos el repositorio de docker y el proxy
  ansible.builtin.template:
    src: 'docker-ce.repo.j2'
    dest: /etc/yum.repos.d/docker-ce.repo
    
# - name: Actualizamos paquetes del sistema
#  package:
#    name: "*"
#    state: latest
  
- name: Desactivamos el servicio de cortafuegos
  ansible.builtin.service:
    name: firewalld
    state: stopped
    enabled: no
  
- name: Para que se apliquen los cambios
  ansible.builtin.shell: sysctl --system
  
- name: Reinicio lento a la maquina para aplicar las actualizaciones
  ansible.builtin.reboot:
    reboot_timeout: 3600
